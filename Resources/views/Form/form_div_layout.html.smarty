{* Labels *}

{function form_label}
    {if $label === null}{assign var=label value=$form->vars.label}{/if}
    {if $label !== false}
        {if !isset($label_attr)} {* Avoid not defined index error *}
            {$label_attr = []}
        {/if}
        {if isset($compound) and !$compound}
            {assign var=label_attr value=$label_attr|array_merge:['for' => $id]}
        {/if}
        {if required}
            {if array_key_exists('class', $label_attr)}
                {$label_attr.class=$label_attr.class|cat:' required'}
            {else}
                {assign var=label_attr value=$label_attr|array_merge:['class' => 'required']}
            {/if}
        {/if}
        {if $label == ''}
            {assign var=label value=$name|humanize}
        {/if}
        <label{foreach from=$label_attr key=attrname item=attrvalue} {$attrname}="{$attrvalue|replace:'&':'&amp;'}"{/foreach}>{$label|replace:'&':'&amp;'|trans}</label>
    {/if}
{/function}

{function button_label}{/function}

{* Misc *}

{function form_start}{strip}
    {assign var=method value=$method|upper}
    {if $method eq "GET" or $method eq "POST"}
        {assign var=form_method value=$method}
    {else}
        {assign var=form_method value="POST"}
    {/if}
    <form name="{$form->vars.name}" method="{$form_method|lower}" action="{$action}"{foreach from=$attr key=attrname item=attrvalue} {$attrname}="{$attrvalue}"{/foreach}{if $multipart} enctype="multipart/form-data"{/if}>
    {if $form_method neq $method}
        <input type="hidden" name="_method" value="{$method}" />
    {/if}
{/strip}{/function}

{function form_enctype}{strip}
    {if $multipart}enctype="multipart/form-data"{/if}
{/strip}{/function}

{function form_errors}
    {if isset($errors) and $errors->count()}
    <ul>
        {$errors->rewind()} {* Set the iterator's position to the beginning *}

        {while $error=$errors->current()}
            <li>{$error->getMessage()}</li>
            {$errors->next()}
        {/while}
    </ul>
    {/if}
{/function}

{function form_rest}
    {* for child in form -%}
        {% if not child.rendered %}
            {{- form_row(child) -}}
        {% endif %}
    {%- endfor *}
{/function}

{* Support *}

{function form_rows}
    {foreach from=$form item=child}
        {call form_row form=$child}
    {/foreach}
{/function}

{function widget_container_attributes}{strip}
    {if $id}id="{$id|replace:'&':'&amp;'}"{/if}
    {foreach from=$attr key=attrname item=attrvalue}
        {' '}
        {if $attrname == placeholder || $attrname == title}
            {$attrname}="{$attrvalue|trans}"
        {elseif $attrvalue === true}
            {$attrname}="{$attrname}"
        {elseif $attrvalue !== false}
            {$attrname}="{$attrvalue|replace:'&':'&amp;'}"
        {/if}
    {/foreach}
{/strip}{/function}

{function widget_attributes}{strip}
    id="{$id|replace:'&':'&amp;'}" name="{$name}"
    {if $read_only} readonly="readonly"{/if}
    {if $disabled} disabled="disabled"{/if}
    {if $required} required="required"{/if}

    {assign var=attr value=$attr|array_merge:$argv.attr}
    {foreach from=$attr key=attrname item=attrvalue}
        {' '}
        {if $attrname == placeholder || $attrname == title}
            {$attrname}="{$attrvalue|trans}"
        {elseif $attrvalue === true}
            {$attrname}="{$attrname}"
        {elseif $attrvalue !== false}
            {$attrname}="{$attrvalue|replace:'&':'&amp;'}"
        {/if}
    {/foreach}
{/strip}{/function}

{function button_attributes}{strip}
    id="{$id|replace:'&':'&amp;'}" name="{$full_name}"{if $disabled} disabled="disabled"{/if}
    {foreach from=$attr key=attrname item=attrvalue}
        {' '}
        {if $attrname eq 'placeholder' or $attrname eq 'title'}
            {$attrname}="{$attrvalue|trans}"
        {elseif $attrvalue === true}
            {$attrname}="{$attrname}"
        {elseif $attrvalue !== false}
            {$attrname}="{$attrvalue|replace:'&':'&amp;'}"
        {/if}
    {/foreach}
{/strip}{/function}

{* Widgets *}

{function form_widget}{strip}
    {* There is a list of possible block names for the widgets. It make possible to customize the output.
     * E.g. <textarea> can't be rendered the same as text (<input type="text"), therefore we have to search
     * for textarea_widget first. After testing all possibilities (there are more of them, for example
     * _form_{field_name}_widget allows to customize a single field), form_widget will be called. *}
    {assign var=block_prefixes value=$block_prefixes|array_reverse}
    {foreach from=$block_prefixes item=block_prefix}
        {assign var=block_name value=$block_prefix|cat:'_':widget}
        {assign var=template_func value=smarty_template_function_|cat:$block_name}

        {* form_widget shouldn't call itself, it would start an endless recursion *}
        {if $block_prefix == 'form' && $compound}
            {*- block('form_widget_compound')*}
            {break}
        {elseif $block_prefix == 'form' && !$compound}
            {call form_widget_simple argv=$form->vars}
            {break}
        {elseif $template_func|function_exists} 
            {call $block_name argv=$form->vars}
            {break}
        {/if}
    {/foreach}
{/strip}{/function}

{function form_widget_simple}
    <input type="{$type|default:'text'}" {call widget_attributes}{if $value != ''} value="{$value|replace:'&':'&amp;'}"{/if} />
{/function}

{* block form_widget_compound -%}
    <div {{ block('widget_container_attributes') }}>
        {%- if form.parent is empty -%}
            {{ form_errors(form) }}
        {%- endif -%}
        {{- block('form_rows') -}}
        {{- form_rest(form) -}}
    </div>
{%- endblock form_widget_compound *}

{function textarea_widget}
    <textarea {call widget_attributes}>{$value|replace:'&':'&amp;'}</textarea>
{/function}

{function button_widget}{strip}
    {if $label eq ''}
        {assign var=label value=$name|humanize}
    {/if}
    <button type="{$type|default:'button'}" {call button_attributes}>{$label|trans}</button>
{/strip}{/function}

{function submit_widget}
    {call button_widget type=$type|default:'submit'}
{/function}

{function reset_widget}
    {call button_widget type=$type|default:'reset'}
{/function}

{function choice_widget}
    {* if expanded %}
        {{- block('choice_widget_expanded') -}}
    {% else %}
        {{- block('choice_widget_collapsed') -}}
    {% endif *}
{/function}

{* block collection_widget -%}
    {% if prototype is defined %}
        {%- set attr = attr|merge({'data-prototype': form_row(prototype) }) -%}
    {% endif %}
    {{- block('form_widget') -}}
{%- endblock collection_widget %}

{% block choice_widget_expanded -%}
    <div {{ block('widget_container_attributes') }}>
    {%- for child in form %}
        {{- form_widget(child) -}}
        {{- form_label(child) -}}
    {% endfor -%}
    </div>
{% endblock choice_widget_expanded %}

{% block choice_widget_collapsed -%}
    {% if required and empty_value is none and not empty_value_in_choices and not multiple -%}
        {% set required = false %}
    {%- endif -%}
    <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
        {% if empty_value is not none -%}
            <option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ empty_value|trans({}, translation_domain) }}</option>
        {%- endif %}
        {%- if preferred_choices|length > 0 -%}
            {% set options = preferred_choices %}
            {{- block('choice_widget_options') -}}
            {% if choices|length > 0 and separator is not none -%}
                <option disabled="disabled">{{ separator }}</option>
            {%- endif %}
        {%- endif -%}
        {% set options = choices -%}
        {{- block('choice_widget_options') -}}
    </select>
{%- endblock choice_widget_collapsed %}

{% block choice_widget_options -%}
    {% for group_label, choice in options %}
        {%- if choice is iterable -%}
            <optgroup label="{{ group_label|trans({}, translation_domain) }}">
                {% set options = choice %}
                {{- block('choice_widget_options') -}}
            </optgroup>
        {%- else -%}
            <option value="{{ choice.value }}"{% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{{ choice.label|trans({}, translation_domain) }}</option>
        {%- endif -%}
    {% endfor %}
{%- endblock choice_widget_options *}

{function checkbox_widget}
    <input type="checkbox" {call widget_attributes}{if isset($value)} value="{$value|replace:'&':'&amp;'}"{/if}{if $checked} checked="checked"{/if} />
{/function}

{function radio_widget}
    <input type="radio" {call widget_attributes}{if isset($value)} value="{$value|replace:'&':'&amp;'}"{/if}{if $checked} checked="checked"{/if} />
{/function}

{function integer_widget}
    {call form_widget_simple type=$type|default:'number'}
{/function}

{function money_widget}
    {capture assign="widget_output"}
        {call form_widget_simple}
    {/capture}
    {$money_pattern|replace:'{{ widget }}':$widget_output}
{/function}

{function url_widget}
    {call form_widget_simple type=$type|default:'url'}
{/function}

{function search_widget}
    {call form_widget_simple type=$type|default:'search'}
{/function}

{function hidden_widget}
    {call form_widget_simple type=$type|default:'hidden'}
{/function}

{function password_widget}
    {call form_widget_simple type=$type|default:'password'}
{/function}

{function email_widget}
    {call form_widget_simple type=$type|default:'email'}
{/function}

{function percent_widget}
    {call form_widget_simple type=$type|default:'text'}%
{/function}

{function number_widget}
    {call form_widget_simple type=$type|default:'text'}
{/function}

{* block datetime_widget -%}
    {% if widget == 'single_text' %}
        {{- block('form_widget_simple') -}}
    {% else %}
        <div {{ block('widget_container_attributes') }}>
            {{- form_errors(form.date) -}}
            {{- form_errors(form.time) -}}
            {{- form_widget(form.date) -}}
            {{- form_widget(form.time) -}}
        </div>
    {% endif %}
{%- endblock datetime_widget %}

{% block date_widget -%}
    {% if widget == 'single_text' %}
        {{- block('form_widget_simple') -}}
    {% else -%}
        <div {{ block('widget_container_attributes') }}>
            {{- date_pattern|replace({
                '{{ year }}':  form_widget(form.year),
                '{{ month }}': form_widget(form.month),
                '{{ day }}':   form_widget(form.day),
            })|raw -}}
        </div>
    {%- endif %}
{%- endblock date_widget %}

{% block time_widget -%}
    {% if widget == 'single_text' %}
        {{- block('form_widget_simple') -}}
    {% else -%}
        {% set vars = widget == 'text' ? { 'attr': { 'size': 1 }} : {} %}
        <div {{ block('widget_container_attributes') }}>
            {{ form_widget(form.hour, vars) }}{% if with_minutes %}:{{ form_widget(form.minute, vars) }}{% endif %}{% if with_seconds %}:{{ form_widget(form.second, vars) }}{% endif %}
        </div>
    {%- endif %}
{%- endblock time_widget %}

{* Rows *}

{function form_row}
    <div>
        {call form_label}
        {call form_errors}
        {call form_widget}
    </div>
{/function}

{* block repeated_row -%}
    {#
    No need to render the errors here, as all errors are mapped
    to the first child (see RepeatedTypeValidatorExtension).
    #}
    {{- block('form_rows') -}}
{%- endblock repeated_row %}

{% block button_row -%}
    <div>
        {{- form_widget(form) -}}
    </div>
{%- endblock button_row %}

{% block hidden_row -%}
    {{ form_widget(form) }}
{%- endblock hidden_row %}

{# Misc #}

{% block form -%}
    {{ form_start(form) }}
        {{- form_widget(form) -}}
    {{ form_end(form) }}
{%- endblock form %}

{% block form_end -%}
    {% if not render_rest is defined or render_rest %}
        {{- form_rest(form) -}}
    {% endif -%}
    </form>
{%- endblock form_end *}
