{* Rows *}

{function form_row}
    {* See form_widget comments *}
    {foreach from=$form->vars.block_prefixes|array_reverse item=block_prefix}
        {assign var=block_name value=$block_prefix|cat:'_':row}
        {assign var=template_func value=smarty_template_function_|cat:$block_name}

        {if $block_prefix == 'form'}
            <div>
                {call form_label}
                {call form_errors}
                {call form_widget}
            </div>
            {break}
        {elseif $template_func|function_exists} 
            {call $block_name}
            {break}
        {/if}
    {/foreach}
{/function}

{function button_row}
    <div>
        {call form_widget}
    </div>
{/function}

{function hidden_row}
    {call form_widget}
{/function}

{function repeated_row}
    {*
    No need to render the errors here, as all errors are mapped
    to the first child (see RepeatedTypeValidatorExtension).
    *}
    {call form_rows}
{/function}

{* Labels *}

{function form_label}{strip}
    {* See form_widget comments *}
    {foreach from=$form->vars.block_prefixes|array_reverse item=block_prefix}
        {assign var=block_name value=$block_prefix|cat:'_':label}
        {assign var=template_func value=smarty_template_function_|cat:$block_name}

        {if $block_prefix == 'form'}
            {if $label === null}{assign var=label value=$form->vars.label}{/if}
            {if $label !== false}
                {if !isset($label_attr)} {* Avoid not defined index error *}
                    {$label_attr = []}
                {/if}
                {if isset($form->vars.compound) and !$form->vars.compound}
                    {assign var=label_attr value=$label_attr|array_merge:['for' => $form->vars.id]}
                {/if}
                {if required}
                    {if array_key_exists('class', $label_attr)}
                        {$label_attr.class=$label_attr.class|cat:' required'}
                    {else}
                        {assign var=label_attr value=$label_attr|array_merge:['class' => 'required']}
                    {/if}
                {/if}
                {if $label == ''}
                    {assign var=label value=$form->vars.name|humanize}
                {/if}
                <label{foreach from=$label_attr key=attrname item=attrvalue} {$attrname}="{$attrvalue|replace:'&':'&amp;'}"{/foreach}>{$label|replace:'&':'&amp;'|trans}</label>
            {/if}
        {elseif $template_func|function_exists} 
            {call $block_name}
            {break}
        {/if}
    {/foreach}
{/strip}{/function}

{function button_label}{/function}

{* Misc *}

{function form_start}{strip}
    {assign var=method value=$method|upper}
    {if $method eq "GET" or $method eq "POST"}
        {assign var=form_method value=$method}
    {else}
        {assign var=form_method value="POST"}
    {/if}
    <form name="{$form->vars.name}" method="{$form_method|lower}" action="{$action}"{foreach from=$attr key=attrname item=attrvalue} {$attrname}="{$attrvalue|replace:'&':'&amp;'}"{/foreach}{if $multipart} enctype="multipart/form-data"{/if}>
    {if $form_method neq $method}
        <input type="hidden" name="_method" value="{$method}" />
    {/if}
{/strip}{/function}

{function form_enctype}{strip}
    {if $multipart}enctype="multipart/form-data"{/if}
{/strip}{/function}

{function form_errors}{strip}
    {if isset($form->vars.errors) and $form->vars.errors->count()}
    <ul>
        {$form->vars.errors->rewind()} {* Set the iterator's position to the beginning *}

        {while $error=$form->vars.errors->current()}
            <li>{$error->getMessage()}</li>
            {$form->vars.errors->next()}
        {/while}
    </ul>
    {/if}
{/strip}{/function}

{function form_rest}
    {foreach from=$form->children item=child}
        {if !$child->isRendered()}
            {form_row form=$child id=$child->vars.id}
            {assign var=child value=$child->setRendered()}
        {/if}
    {/foreach}
{/function}

{* Support *}

{function form_rows}
    {foreach from=$form->children item=child}
        {form_row form=$child id=$child->vars.id}
    {/foreach}
{/function}

{function widget_container_attributes}{strip}
    {if $id}id="{$id|replace:'&':'&amp;'}"{/if}
    {foreach from=$attr key=attrname item=attrvalue}
        {' '}
        {if $attrname == placeholder || $attrname == title}
            {$attrname}="{$attrvalue|trans}"
        {elseif $attrvalue === true}
            {$attrname}="{$attrname}"
        {elseif $attrvalue !== false}
            {$attrname}="{$attrvalue|replace:'&':'&amp;'}"
        {/if}
    {/foreach}
{/strip}{/function}

{function widget_attributes}{strip}
    id="{$id|replace:'&':'&amp;'}" name="{$form->vars.full_name}"
    {if $form->vars.read_only} readonly="readonly"{/if}
    {if $form->vars.disabled} disabled="disabled"{/if}
    {if $required} required="required"{/if}

    {assign var=attr value=$attr|array_merge:$form->vars.attr}
    {foreach from=$attr key=attrname item=attrvalue}
        {' '}
        {if $attrname == placeholder || $attrname == title}
            {$attrname}="{$attrvalue|trans}"
        {elseif $attrvalue === true}
            {$attrname}="{$attrname}"
        {elseif $attrvalue !== false}
            {$attrname}="{$attrvalue|replace:'&':'&amp;'}"
        {/if}
    {/foreach}
{/strip}{/function}

{function button_attributes}{strip}
    id="{$id|replace:'&':'&amp;'}" name="{$form->vars.full_name}"{if $disabled} disabled="disabled"{/if}
    {foreach from=$attr key=attrname item=attrvalue}
        {' '}
        {if $attrname eq 'placeholder' or $attrname eq 'title'}
            {$attrname}="{$attrvalue|trans}"
        {elseif $attrvalue === true}
            {$attrname}="{$attrname}"
        {elseif $attrvalue !== false}
            {$attrname}="{$attrvalue|replace:'&':'&amp;'}"
        {/if}
    {/foreach}
{/strip}{/function}

{function form_end}{strip}
    {if !isset($render_rest) or $render_rest}
        {call form_rest}
    {/if}
    </form>
{/strip}{/function}

{function form}
    {call form_start}
    {call form_widget}
    {call form_end}
{/function}

{* Widgets *}

{function form_widget}{strip}
    {* There is a list of possible block names for the widgets. It make possible to customize the output.
     * E.g. <textarea> can't be rendered the same as text (<input type="text"), therefore we have to search
     * for textarea_widget first. After testing all possibilities (there are more of them, for example
     * _form_{field_name}_widget allows to customize a single field), form_widget will be called. *}
    {foreach from=$form->vars.block_prefixes|array_reverse item=block_prefix}
        {assign var=block_name value=$block_prefix|cat:'_':widget}
        {assign var=template_func value=smarty_template_function_|cat:$block_name}

        {* form_widget shouldn't call itself, it would start an endless recursion *}
        {if $block_prefix == 'form' && $form->vars.compound}
            {call form_widget_compound}
            {break}
        {elseif $block_prefix == 'form'}
            {call form_widget_simple}
            {break}
        {elseif $template_func|function_exists} 
            {call $block_name}
            {break}
        {/if}
    {/foreach}
{/strip}{/function}

{function form_widget_simple}{strip}
    {assign var="required" value=$form->vars.required}
    <input type="{$type|default:'text'}" {call widget_attributes}{if $form->vars.value != ''} value="{$form->vars.value|replace:'&':'&amp;'}"{/if} />
{/strip}{/function}

{function form_widget_compound}
    <div {call widget_container_attributes}>
        {if !$form->parent}
            {call form_errors}
        {/if}
        {call form_rows}
        {call form_rest}
    </div>
{/function}

{function textarea_widget}
    {assign var="required" value=$form->vars.required}
    <textarea {call widget_attributes}>{$form->vars.value|replace:'&':'&amp;'}</textarea>
{/function}

{function button_widget}{strip}
    {if $label eq ''}
        {assign var=label value=$name|humanize}
    {/if}
    <button type="{$type|default:'button'}" {call button_attributes}>{$label|trans}</button>
{/strip}{/function}

{function submit_widget}
    {call button_widget type=$type|default:'submit'}
{/function}

{function reset_widget}
    {call button_widget type=$type|default:'reset'}
{/function}

{function choice_widget}
    {if $form->vars.expanded}
        {call choice_widget_expanded}
    {else}
        {call choice_widget_collapsed}
    {/if}
{/function}

{function collection_widget}
    {if isset($form->vars.prototype)}
        {capture assign="prototype_output"}
            {form_row form=$form->vars.prototype}
        {/capture}
        {assign var=attr value=$attr|array_merge:['data-prototype' => $prototype_output]}
    {/if}

    <div {call widget_container_attributes}>
    {foreach from=$form->children item=child}
        {form_row form=$child id=$child->vars.id}
    {/foreach}
    </div>
{/function}

{function choice_widget_expanded}
    <div {call widget_container_attributes}>
    {foreach from=$form->children item=child}
        {form_widget form=$child id=$child->vars.id}
        {form_label form=$child id=$child->vars.id}
    {/foreach}
    </div>
{/function}

{function choice_widget_collapsed}
    {if !isset($empty_value)}
        {assign var=empty_value value=$form->vars.empty_value}
    {/if}
    {if $form->vars.required and $empty_value === null and !$form->vars.empty_value_in_choices and !$form->vars.multiple}
        {assign var=required value=false}
    {/if}
    <select {call widget_attributes}{if $form->vars.multiple} multiple="multiple"{/if}>
        {if $empty_value !== null}
            <option value=""{if $form->vars.required and $form->vars.value == ''} selected="selected"{/if}>{$empty_value|replace:'&':'&amp;'|trans}</option>
        {/if}
        {if $form->vars.preferred_choices|count > 0}
            {call choice_widget_options options=$preferred_choices}
            {if $form->vars.choices|count > 0 and $separator !== null}
                <option disabled="disabled">{$separator}</option>
            {/if}
        {/if}
        {call choice_widget_options options=$form->vars.choices}
    </select>
{/function}

{function choice_widget_options}
    {foreach from=$options key=group_label item=choice}
        {if $choice instanceof 'Symfony\Component\Form\Extension\Core\View\ChoiceView'}
            <option value="{$choice->value|replace:'&':'&amp;'}"{if $choice|selectedchoice:$form->vars.value} selected="selected"{/if}>{$choice->label|replace:'&':'&amp;'|trans}</option>
        {else}
            <optgroup label="{$group_label|replace:'&':'&amp;'|trans}">
                {call choice_widget_options options=$choice}
            </optgroup>
        {/if}
    {/foreach}
{/function}

{function checkbox_widget}
    {assign var="required" value=$form->vars.required}
    <input type="checkbox" {call widget_attributes}{if isset($form->vars.value)} value="{$form->vars.value|replace:'&':'&amp;'}"{/if}{if $form->vars.checked} checked="checked"{/if} />
{/function}

{function radio_widget}
    {assign var="required" value=$form->vars.required}
    <input type="radio" {call widget_attributes}{if isset($form->vars.value)} value="{$form->vars.value|replace:'&':'&amp;'}"{/if}{if $form->vars.checked} checked="checked"{/if} />
{/function}

{function integer_widget}
    {call form_widget_simple type=$type|default:'number'}
{/function}

{function money_widget}
    {capture assign="widget_output"}
        {call form_widget_simple}
    {/capture}
    {$money_pattern|replace:'{{ widget }}':$widget_output}
{/function}

{function url_widget}
    {call form_widget_simple type=$type|default:'url'}
{/function}

{function search_widget}
    {call form_widget_simple type=$type|default:'search'}
{/function}

{function hidden_widget}
    {call form_widget_simple type=$type|default:'hidden'}
{/function}

{function password_widget}
    {call form_widget_simple type=$type|default:'password'}
{/function}

{function email_widget}
    {call form_widget_simple type=$type|default:'email'}
{/function}

{function percent_widget}
    {call form_widget_simple type=$type|default:'text'}%
{/function}

{function number_widget}
    {call form_widget_simple type=$type|default:'text'}
{/function}

{function datetime_widget}
    {if $form->vars.widget == 'single_text'}
        {call form_widget_simple}
    {else}
        <div {call widget_container_attributes}>
            {form_errors form=$form->children.date}
            {form_errors form=$form->children.time}
            {form_widget form=$form->children.date id=$form->children.date->vars.id}
            {form_widget form=$form->children.time id=$form->children.time->vars.id}
        </div>
    {/if}
{/function}

{function date_widget}
    {if $form->vars.widget == 'single_text'}
        {call form_widget_simple type='date'}
    {else}
        <div {widget_container_attributes}>
            {capture assign="year_output"}
                {form_widget form=$form->children.year id=$form->children.year->vars.id}
            {/capture}
            {capture assign="month_output"}
                {form_widget form=$form->children.month id=$form->children.month->vars.id}
            {/capture}
            {capture assign="day_output"}
                {form_widget form=$form->children.day id=$form->children.day->vars.id}
            {/capture}

            {$form->vars.date_pattern|replace:'{{ year }}':$year_output|replace:'{{ month }}':$month_output|replace:'{{ day }}':$day_output}
        </div>
    {/if}
{/function}

{function time_widget}
    {if $form->vars.widget == 'single_text'}
        {call form_widget_simple type='time'}
    {else}
        {if $form->vars.widget == 'text'}
            {assign var=attr value=$attr|array_merge:['size' => 1]}
        {/if}
        <div {call widget_container_attributes}>
            {form_widget form=$form->children.hour id=$form->children.hour->vars.id}{if $form->vars.with_minutes}:{form_widget form=$form->children.minute id=$form->children.minute->vars.id}{/if}{if $form->vars.with_seconds}:{form_widget form=$form->children.second id=$form->children.second->vars.id}{/if}
        </div>
    {/if}
{/function}
